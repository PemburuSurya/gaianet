#!/bin/bash

# ==============================================
# GaiaNet 5-Node Cluster Auto-Deployment Script
# Version: 1.0
# ==============================================

# Configuration
BASE_DIR="$PWD/gaianet-cluster"
CONFIG_URL="https://raw.githubusercontent.com/PemburuSurya/gaianet/main/qwen1.5/config.json"
INSTALL_SCRIPT_URL="https://github.com/GaiaNet-AI/gaianet-node/releases/latest/download/install.sh"

# Node configurations
declare -A NODES=(
    [1]="8080:6333:gaianet-data1"
    [2]="8081:6334:gaianet-data2" 
    [3]="8082:6335:gaianet-data3"
    [4]="8083:6336:gaianet-data4"
    [5]="8084:6337:gaianet-data5"
)

# ==============================================
# Functions
# ==============================================

prepare_directories() {
    echo "Preparing directory structure..."
    mkdir -p "$BASE_DIR"
    for node in {1..5}; do
        mkdir -p "$BASE_DIR/node$node"
    done
}

create_dockerfiles() {
    echo "Generating Dockerfiles..."
    for node in {1..5}; do
        IFS=':' read -r http_port qdrant_port volume_name <<< "${NODES[$node]}"
        
        cat > "$BASE_DIR/node$node/Dockerfile" <<EOF
# GaiaNet Node $node
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \\
    curl tar git openssl wget python3 python3-pip \\
    build-essential libssl-dev pciutils && \\
    rm -rf /var/lib/apt/lists/*

RUN useradd -m gaianet && \\
    mkdir -p /home/gaianet/gaianet-node$node && \\
    chown -R gaianet:gaianet /home/gaianet

USER gaianet
WORKDIR /home/gaianet

ENV GAIANET_BASE_DIR=/home/gaianet/gaianet-node$node
ENV PATH="\$GAIANET_BASE_DIR/bin:\${PATH}"

RUN mkdir -p \$GAIANET_BASE_DIR/{bin,log,qdrant,gaia-frp,tmp}

RUN for i in {1..5}; do \\
      curl -sSfL '$INSTALL_SCRIPT_URL' | \\
      bash -s -- --base \$GAIANET_BASE_DIR && break || sleep 15; \\
    done

RUN gaianet init --config '$CONFIG_URL'

COPY entrypoint.sh /home/gaianet/entrypoint.sh
RUN chmod +x /home/gaianet/entrypoint.sh

EXPOSE $http_port $qdrant_port

ENTRYPOINT ["/home/gaianet/entrypoint.sh"]
EOF
    done
}

create_entrypoints() {
    echo "Creating entrypoint scripts..."
    for node in {1..5}; do
        IFS=':' read -r http_port qdrant_port volume_name <<< "${NODES[$node]}"
        
        cat > "$BASE_DIR/node$node/entrypoint.sh" <<EOF
#!/bin/bash
gaianet start --http-port $http_port --qdrant-port $qdrant_port
tail -f /dev/null
EOF
        chmod +x "$BASE_DIR/node$node/entrypoint.sh"
    done
}

build_images() {
    echo "Building Docker images..."
    for node in {1..5}; do
        echo "Building image for node $node..."
        docker build -t "gaianet-node$node" "$BASE_DIR/node$node/"
    done
}

run_containers() {
    echo "Starting containers..."
    for node in {1..5}; do
        IFS=':' read -r http_port qdrant_port volume_name <<< "${NODES[$node]}"
        
        echo "Starting node $node (HTTP:$http_port, Qdrant:$qdrant_port)..."
        docker run -d \
            --name "gaianet-node$node" \
            -p "$http_port:$http_port" \
            -p "$qdrant_port:$qdrant_port" \
            -v "$volume_name:/home/gaianet/gaianet-node$node" \
            "gaianet-node$node"
    done
}

verify_deployment() {
    echo "Verifying deployment..."
    echo -e "\nRunning containers:"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep gaianet-node
    
    echo -e "\nVolumes created:"
    docker volume ls | grep gaianet-data
    
    echo -e "\nDeployment summary:"
    echo "+--------+-----------+------------+----------------+"
    echo "| Node   | HTTP Port | Qdrant Port| Volume Name    |"
    echo "+--------+-----------+------------+----------------+"
    for node in {1..5}; do
        IFS=':' read -r http_port qdrant_port volume_name <<< "${NODES[$node]}"
        printf "| %-6s | %-9s | %-10s | %-14s |\n" "$node" "$http_port" "$qdrant_port" "$volume_name"
    done
    echo "+--------+-----------+------------+----------------+"
    
    echo -e "\nYou can access the nodes at:"
    for node in {1..5}; do
        IFS=':' read -r http_port qdrant_port volume_name <<< "${NODES[$node]}"
        echo "- Node $node: http://localhost:$http_port"
    done
}

cleanup() {
    echo "Cleaning up deployment..."
    for node in {1..5}; do
        docker rm -f "gaianet-node$node" >/dev/null 2>&1
        docker rmi "gaianet-node$node" >/dev/null 2>&1
        docker volume rm "gaianet-data$node" >/dev/null 2>&1
    done
    rm -rf "$BASE_DIR"
}

# ==============================================
# Main Execution
# ==============================================

case "$1" in
    deploy)
        prepare_directories
        create_dockerfiles
        create_entrypoints
        build_images
        run_containers
        verify_deployment
        ;;
    clean)
        cleanup
        ;;
    *)
        echo "Usage: $0 [deploy|clean]"
        echo "  deploy - Create and start 5-node GaiaNet cluster"
        echo "  clean  - Remove all containers, images and volumes"
        exit 1
        ;;
esac

echo -e "\nOperation completed successfully!"
